name: ACUL Screens - Build and Deploy

on:
  push:
    branches: [main, master]
    # Only trigger if files within the boilerplate example change.
    paths:
      - '**/*'
      # Exclude changes *only* to this workflow file itself or docs from triggering a deployment
      - '!.github/workflows/acul-deploy.yml'
      - '!DEPLOYMENT.md'
      - '!README.md'
  workflow_dispatch: # Allow manual triggering from the GitHub Actions UI

env:
  NODE_VERSION: "20"
  # When running in the context of the standalone boilerplate, the working directory is just '.'
  WORKING_DIR: "."

jobs:
  build-and-deploy:
    name: Build & Deploy ACUL Screens
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    outputs:
      deployed_screens: ${{ steps.configure-auth0.outputs.deployed_screens }}
      failed_screens: ${{ steps.configure-auth0.outputs.failed_screens }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: Install dependencies
        shell: bash
        working-directory: ${{ env.WORKING_DIR }}
        env:
          NPM_CONFIG_REGISTRY: 'https://registry.npmjs.org'
          NODE_AUTH_TOKEN: ''  # Explicitly unset any auth token to force public registry
        run: |
          npm config set registry https://registry.npmjs.org/
          npm ci

      - name: Build application
        shell: bash
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          npm run build --if-present

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_S3_ARN }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
          mask-aws-account-id: true

      - name: Discover available screens
        id: discover-screens
        uses: ./.github/actions/discover-acul-screens
        with:
          working-directory: ${{ env.WORKING_DIR }}

      - name: Upload assets to S3
        uses: ./.github/actions/upload-acul-to-s3
        with:
          working-directory: ${{ env.WORKING_DIR }}
          s3-bucket-name: ${{ secrets.S3_BUCKET_NAME }}

      - name: Setup Auth0 CLI
        uses: ./.github/actions/setup-auth0-cli
        with:
          auth0-domain: ${{ secrets.AUTH0_DOMAIN }}
          auth0-client-id: ${{ secrets.AUTH0_CLIENT_ID }}
          auth0-client-secret: ${{ secrets.AUTH0_CLIENT_SECRET }}

      - name: Configure Auth0 screens
        id: configure-auth0
        uses: ./.github/actions/configure-auth0-screens
        with:
          working-directory: ${{ env.WORKING_DIR }}
          cdn-url: ${{ secrets.S3_CDN_URL }}
          screens-json: ${{ steps.discover-screens.outputs.screens }}

      - name: Deployment Summary
        if: always()
        uses: ./.github/actions/acul-deployment-summary
        with:
          job-status: ${{ job.status }}
          deployed-screens: ${{ steps.configure-auth0.outputs.deployed_screens }}
          failed-screens: ${{ steps.configure-auth0.outputs.failed_screens }}
          s3-bucket-name: ${{ secrets.S3_BUCKET_NAME }}
          cdn-url: ${{ secrets.S3_CDN_URL }} 